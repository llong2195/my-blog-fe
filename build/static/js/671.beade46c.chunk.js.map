{"version":3,"file":"static/js/671.beade46c.chunk.js","mappings":"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","sources":["components/latestlist/LatestList.tsx","components/postlist/PostList.tsx","pages/home/Home.tsx"],"sourcesContent":["import React, { FC, memo, useEffect, useState } from 'react';\r\nimport './latest.scss';\r\nimport { useAppDispatch, useAppSelector, useAuth } from '../../hooks';\r\nimport { formatTime } from '../../helpers';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport Button from '../common/button/Button';\r\nimport ModalWindow from '../modalWindow/ModalWindow';\r\nimport { IPost } from '../../types/post-type';\r\nimport { fetchTags } from '../../store/reducers/tags/actionCreators';\r\nimport TagChip from '../tagChip/tagChip';\r\n\r\nconst LatestList: FC<{ todayPosts: IPost[] }> = memo(({ todayPosts }) => {\r\n  const { role } = useAuth();\r\n  const { isAuth } = useAppSelector((state) => state.auth);\r\n  const { tags } = useAppSelector((state) => state.tags);\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleCreate = (path: string) => {\r\n    if (!isAuth) {\r\n      setShowModal(true);\r\n    } else {\r\n      navigate(path);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTags());\r\n  }, [dispatch]);\r\n  return (\r\n    <div className={'latestWrapper'}>\r\n      <ModalWindow showModal={showModal} setShowModal={setShowModal} />\r\n      <div className={'createItemButtons'}>\r\n        <div className={'createNewPostBtn'}>\r\n          <Button\r\n            text={'Tạo bài viết'}\r\n            type={'button'}\r\n            handleClick={() => handleCreate('/create')}\r\n          />\r\n        </div>\r\n        {role === 'admin' && (\r\n          <div className={'createNewPostBtn'}>\r\n            <Button\r\n              text={'Tạo thẻ'}\r\n              type={'button'}\r\n              handleClick={() => handleCreate('/create-tag')}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={'latestList'}>\r\n        <div className={'latestTitle'}>\r\n          <h3>Mới nhất</h3>\r\n        </div>\r\n        <div className={'latestItems'}>\r\n          <ul>\r\n            {todayPosts.length > 0 &&\r\n              todayPosts.map((post) => (\r\n                <li key={post.id}>\r\n                  <span>{formatTime(post.dateAndTimePublish)}</span>\r\n                  <Link to={`/posts/${post.id}`} className={'latestLink'}>\r\n                    <h5>{post.title}</h5>\r\n                  </Link>\r\n                  <div className=\"latestPostReactions\">\r\n                    <div className=\"latestPostReactionItem\">\r\n                      <FavoriteBorderIcon className=\"latestPostReactionIconLike\" />\r\n                      <span>{post.userLikes.length}</span>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className={'tagsRecommendations'}>\r\n        <h3>Thẻ bài viết</h3>\r\n        <div className={'postTags'}>\r\n          {tags?.length > 0 &&\r\n            tags.map((tag) => <TagChip key={tag.id} tag={tag} />)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default LatestList;\r\n","import React, { FC } from 'react';\r\nimport './postlist.scss';\r\nimport PostItem from './postitem/PostItem';\r\nimport { IPost } from '../../types/post-type';\r\n\r\ninterface PostListProps {\r\n  posts: IPost[];\r\n  error: string;\r\n}\r\n\r\nconst PostList: FC<PostListProps> = ({ posts, error }) => {\r\n  return (\r\n    <div className={'postList'}>\r\n      {error ? (\r\n        <div className={'errorFetching'}>Error fetching posts</div>\r\n      ) : (\r\n        posts.map((post, index) => (\r\n          <PostItem key={post.id} displayImage={index === 0} post={post} />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React, { FC, useEffect } from 'react';\r\nimport './home.scss';\r\nimport { useAppDispatch, useAppSelector } from '../../hooks';\r\nimport { fetchPosts } from '../../store/reducers/posts/actionCreators';\r\nimport Sidebar from '../../components/sidebar/Sidebar';\r\nimport PostList from '../../components/postlist/PostList';\r\nimport Loader from '../../components/loader/Loader';\r\nimport LatestList from '../../components/latestlist/LatestList';\r\n\r\nconst Home: FC = () => {\r\n  const { isLoading, error, posts, postsType, todayPosts } = useAppSelector(\r\n    (state) => state.posts\r\n  );\r\n  const dispatch = useAppDispatch();\r\n  console.log('post HOME', posts);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPosts({ type: postsType }));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={'home'}>\r\n      <Sidebar homePage={true} />\r\n      <div className={'homePosts'}>\r\n        {isLoading ? <Loader /> : <PostList error={error} posts={posts} />}\r\n      </div>\r\n      <LatestList todayPosts={todayPosts} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["memo","todayPosts","role","useAuth","isAuth","useAppSelector","state","auth","tags","dispatch","useAppDispatch","navigate","useNavigate","useState","showModal","setShowModal","handleCreate","path","useEffect","fetchTags","className","ModalWindow","Button","text","type","handleClick","length","map","post","formatTime","dateAndTimePublish","to","id","title","FavoriteBorder","userLikes","tag","posts","error","index","PostItem","displayImage","isLoading","postsType","console","log","fetchPosts","Sidebar","homePage","Loader","LatestList"],"sourceRoot":""}