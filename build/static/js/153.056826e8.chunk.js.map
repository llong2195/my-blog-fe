{"version":3,"file":"static/js/153.056826e8.chunk.js","mappings":"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","sources":["components/fileUpload/FileUpload.tsx","components/userPostList/UserPostList.tsx","services/user-service.ts","components/editProfileForm/EditProfileForm.tsx","pages/profile/Profile.tsx"],"sourcesContent":["import React, { FC, useEffect, useRef, useState } from 'react';\r\nimport './fileupload.scss';\r\nimport Compressor from 'compressorjs';\r\n\r\ninterface FileUploadProps {\r\n  handleFile: (file: File | undefined) => void;\r\n  displayImage?: boolean;\r\n  defaultImageURL?: string | null;\r\n}\r\n\r\nconst FileUpload: FC<FileUploadProps> = ({\r\n  handleFile,\r\n  displayImage,\r\n  defaultImageURL,\r\n}) => {\r\n  const [imageUrl, setImageUrl] = useState<string>('');\r\n  const hiddenFileInput = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (defaultImageURL) {\r\n      setImageUrl(defaultImageURL);\r\n    }\r\n  }, [defaultImageURL]);\r\n  const handleClick = () => {\r\n    hiddenFileInput.current?.click();\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const fileUploaded = event.target.files?.[0];\r\n    if (fileUploaded) {\r\n      new Compressor(fileUploaded, {\r\n        quality: 0.8,\r\n        success: (compressedResult) => {\r\n          handleFile(fileUploaded);\r\n        },\r\n      });\r\n      setImageUrl(URL.createObjectURL(fileUploaded));\r\n    }\r\n  };\r\n  return (\r\n    <div className={'imageUpload'}>\r\n      <div className={'uploadFile'}>\r\n        <button onClick={handleClick}>Thêm ảnh</button>\r\n      </div>\r\n      <input\r\n        type=\"file\"\r\n        ref={hiddenFileInput}\r\n        style={{ display: 'none' }}\r\n        onChange={handleChange}\r\n      />\r\n      {displayImage && (\r\n        <div className={'imagePreview'}>\r\n          {imageUrl && (\r\n            <img width={300} height={300} src={imageUrl} alt=\"postPicture\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport './userPostList.scss';\r\nimport PostItem from '../postlist/postitem/PostItem';\r\nimport { IUser } from '../../types/user-type';\r\nimport PostService from '../../services/post-service';\r\nimport { IPost } from '../../types/post-type';\r\n\r\ninterface UserPostListProps {\r\n  user: IUser;\r\n}\r\n\r\nconst UserPostList: FC<UserPostListProps> = ({ user }) => {\r\n  const [posts, setPosts] = useState<IPost[]>([]);\r\n  useEffect(() => {\r\n    const getPosts = async () => {\r\n      try {\r\n        const response = await PostService.getByUserId(user.id);\r\n        setPosts(response.data);\r\n      } catch (e: any) {\r\n        console.log('Error fetching user`s posts');\r\n      }\r\n    };\r\n    getPosts();\r\n  }, [user]);\r\n  return (\r\n    <div className={'userPostList'}>\r\n      {posts.length > 0 ? (\r\n        posts.map((post) => (\r\n          <div key={post.id} className={'userPostListItem'}>\r\n            <PostItem post={post} />\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <div className={'noPostsCreatedByUser'}>Bạn chưa tạo Blog nào</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPostList;\r\n","import api from \"../http\";\r\nimport {IUser} from \"../types/user-type\";\r\nimport {AxiosResponse} from \"axios\";\r\n\r\nexport default class UserService{\r\n\r\n    static async updateUser(userId: number, firstName: string, lastName: string, email: string, picture?: any): Promise<AxiosResponse<IUser>>{\r\n        const formData = new FormData()\r\n        formData.append('userId', userId.toString())\r\n        formData.append('firstName', firstName)\r\n        formData.append('lastName', lastName)\r\n        formData.append('email', email)\r\n        if(picture){\r\n            console.log('picture')\r\n            formData.append('picture', picture)\r\n        }\r\n\r\n        return api.put<IUser>('/auth/update', formData)\r\n    }\r\n}","import React, { FC, useEffect, useState } from 'react';\r\nimport './editProfileForm.scss';\r\nimport Button from '../common/button/Button';\r\nimport { useAppDispatch, useAppSelector } from '../../hooks';\r\nimport UserService from '../../services/user-service';\r\nimport { setUser } from '../../store/reducers/auth/authSlice';\r\n\r\ninterface EditProfileFormProps {\r\n  file: File | null;\r\n  setFile: any;\r\n}\r\n\r\nconst EditProfileForm: FC<EditProfileFormProps> = ({ file, setFile }) => {\r\n  const dispatch = useAppDispatch();\r\n  const { user } = useAppSelector((state) => state.auth);\r\n  const [userInfo, setUserInfo] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n  });\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    setFile(null);\r\n    if (Object.keys(user).length > 0) {\r\n      setUserInfo({ ...user });\r\n    }\r\n  }, [user, setFile]);\r\n\r\n  const onSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n    if (\r\n      user.firstName === userInfo.firstName &&\r\n      user.lastName === userInfo.lastName &&\r\n      user.email === userInfo.email &&\r\n      !file\r\n    ) {\r\n      setMessage('Please edit fields!');\r\n    } else {\r\n      UserService.updateUser(\r\n        user.id,\r\n        userInfo.firstName,\r\n        userInfo.lastName,\r\n        userInfo.email,\r\n        file\r\n      )\r\n        .then((response) => {\r\n          dispatch(setUser(response.data));\r\n          setMessage('Changes saved!');\r\n        })\r\n        .catch((error) => setMessage(error.message));\r\n    }\r\n  };\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserInfo({ ...userInfo, [e.target.name]: e.target.value });\r\n  };\r\n  return (\r\n    <form className={'editProfileForm'}>\r\n      <label className=\"field field_v2\">\r\n        <input\r\n          name={'firstName'}\r\n          value={userInfo.firstName}\r\n          onChange={onChange}\r\n          className=\"field__input\"\r\n        />\r\n        <span className=\"field__label-wrap\">\r\n          <span className=\"field__label\">First name</span>\r\n        </span>\r\n      </label>\r\n      <label className=\"field field_v2\">\r\n        <input\r\n          name={'lastName'}\r\n          value={userInfo.lastName}\r\n          onChange={onChange}\r\n          className=\"field__input\"\r\n        />\r\n        <span className=\"field__label-wrap\">\r\n          <span className=\"field__label\">Last name</span>\r\n        </span>\r\n      </label>\r\n      <label className=\"field field_v2\">\r\n        <input\r\n          name={'email'}\r\n          value={userInfo.email}\r\n          onChange={onChange}\r\n          className=\"field__input\"\r\n        />\r\n        <span className=\"field__label-wrap\">\r\n          <span className=\"field__label\">Email</span>\r\n        </span>\r\n      </label>\r\n      <div className={'submitProfileChanges'}>\r\n        <div className={'profileSaveBtn'}>\r\n          <Button handleClick={onSubmit} type={'submit'} text={'Lưu'} />\r\n        </div>\r\n        {message && (\r\n          <span\r\n            className={\r\n              message === 'Changes saved!' ? 'submitSuccess' : 'submitError'\r\n            }\r\n          >\r\n            {message}\r\n          </span>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditProfileForm;\r\n","import React, { FC, useState } from 'react';\r\nimport './profile.scss';\r\nimport FileUpload from '../../components/fileUpload/FileUpload';\r\nimport UserPostList from '../../components/userPostList/UserPostList';\r\nimport { useAppSelector } from '../../hooks';\r\nimport EditProfileForm from '../../components/editProfileForm/EditProfileForm';\r\n\r\nconst Profile: FC = () => {\r\n  const { user } = useAppSelector((state) => state.auth);\r\n  const [file, setFile] = useState<any>(null);\r\n\r\n  return (\r\n    <div className={'profileWrapper'}>\r\n      <div className={'profile'}>\r\n        <h1>\r\n          Hồ sơ {user.firstName} {user.lastName}\r\n        </h1>\r\n        <div className={'profileInfo'}>\r\n          <div className={'profileLeft'}>\r\n            <div className={'profileImage'}>\r\n              <img\r\n                src={file ? URL.createObjectURL(file) : user.profilePicture}\r\n                alt=\"profileAvatar\"\r\n              />\r\n            </div>\r\n            <div className={'profileImageUpload'}>\r\n              <FileUpload\r\n                displayImage={false}\r\n                handleFile={(file: File | undefined) => setFile(file)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={'profileRight'}>\r\n            <h3>Thông tin</h3>\r\n            <div className={'profileCredentials'}>\r\n              <EditProfileForm setFile={setFile} file={file} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={'userPosts'}>\r\n        <h3>Bài viết đã tạo</h3>\r\n        {Object.keys(user).length > 0 && <UserPostList user={user} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["handleFile","displayImage","defaultImageURL","useState","imageUrl","setImageUrl","hiddenFileInput","useRef","useEffect","className","onClick","current","click","type","ref","style","display","onChange","event","fileUploaded","target","files","Compressor","quality","success","compressedResult","URL","createObjectURL","width","height","src","alt","user","posts","setPosts","getPosts","PostService","id","response","data","console","log","length","map","post","PostItem","UserService","userId","firstName","lastName","email","picture","formData","FormData","append","toString","api","file","setFile","dispatch","useAppDispatch","useAppSelector","state","auth","userInfo","setUserInfo","message","setMessage","Object","keys","e","name","value","Button","handleClick","preventDefault","updateUser","then","setUser","catch","error","text","profilePicture","FileUpload"],"sourceRoot":""}